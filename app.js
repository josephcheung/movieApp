// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";  this.movieApp = angular.module('movieApp', []);

  movieApp.controller('MovieController', function($scope, $http) {
    var getDetails, _i, _results;

    $scope.years = (function() {
      _results = [];
      for (_i = 1940; _i <= 2014; _i++){ _results.push(_i); }
      return _results;
    }).apply(this);
    getDetails = function(data) {
      var movieDetails;

      movieDetails = $scope.movieDetails = data;
      if ($scope.movieDetails.Poster === 'N/A') {
        $scope.movieDetails.Poster = '';
      }
      $scope.showDetail = true;
      $('#star').raty();
      $('#star').raty('score', (parseInt(movieDetails.imdbRating)) / 2);
      return $('#star').raty('readOnly', true);
    };
    $scope.search = function() {
      var movieName, year;

      movieName = $scope.movieName;
      year = $scope.movieYear;
      if (movieName) {
        return $http({
          url: "http://www.omdbapi.com/",
          method: "GET",
          params: {
            s: movieName,
            y: year ? year : void 0
          }
        }).success(function(data, status, headers, config) {
          return $scope.movies = data['Search'];
        }).error(function(data, status, headers, config) {
          return $scope.status = status;
        });
      }
    };
    return $scope.getDetails = function(e) {
      var fullPlot, imdbID;

      fullPlot = $scope.fullPlot;
      imdbID = e.target.attributes[0].value;
      return $http({
        url: "http://www.omdbapi.com/",
        method: "GET",
        params: {
          i: imdbID,
          tomatoes: true,
          plot: fullPlot ? 'full' : void 0
        }
      }).success(function(data, status, headers, config) {
        return getDetails(data);
      }).error(function(data, status, headers, config) {
        return $scope.status = status;
      });
    };
  });

}).call(this);
